// Code generated by banking/generator; DO NOT EDIT.

package iban

import (
	"fmt"
)

// GetBBAN retrieves BBAN from an iban
func GetBBAN(iban string) (BBAN, error) {
	if len(iban) < 2 {
		return BBAN{}, fmt.Errorf("unexpected iban length: %w", ErrValidation)
	}

	code := iban[0:2]
	switch code {
	case "AL":
		return GetAlbaniaBBAN(iban)
	case "AD":
		return GetAndorraBBAN(iban)
	case "AT":
		return GetAustriaBBAN(iban)
	case "AZ":
		return GetRepublicOfAzerbaijanBBAN(iban)
	case "BH":
		return GetKingdomOfBahrainBBAN(iban)
	case "BE":
		return GetBelgiumBBAN(iban)
	case "BA":
		return GetBosniaAndHerzegovinaBBAN(iban)
	case "BR":
		return GetBrazilBBAN(iban)
	case "BG":
		return GetBulgariaBBAN(iban)
	case "CR":
		return GetCostaRicaBBAN(iban)
	case "HR":
		return GetCroatiaBBAN(iban)
	case "CY":
		return GetCyprusBBAN(iban)
	case "CZ":
		return GetCzechRepublicBBAN(iban)
	case "DK":
		return GetDenmarkBBAN(iban)
	case "FO":
		return GetFaroeIslandsBBAN(iban)
	case "GL":
		return GetGreenlandBBAN(iban)
	case "DO":
		return GetDominicanRepublicBBAN(iban)
	case "EE":
		return GetEstoniaBBAN(iban)
	case "FI":
		return GetFinlandBBAN(iban)
	case "FR":
		return GetFranceBBAN(iban)
	case "GF":
		return GetFrenchGuyanaBBAN(iban)
	case "GP":
		return GetGuadeloupeBBAN(iban)
	case "MQ":
		return GetMartiniqueBBAN(iban)
	case "RE":
		return GetReunionBBAN(iban)
	case "FP":
		return GetFrenchPolynesiaBBAN(iban)
	case "TF":
		return GetFrenchSouthernTerritoriesBBAN(iban)
	case "YT":
		return GetMayotteBBAN(iban)
	case "NC":
		return GetNewCaledoniaBBAN(iban)
	case "BL":
		return GetSaintBarthelemyBBAN(iban)
	case "MF":
		return GetSaintMartinBBAN(iban)
	case "PM":
		return GetSaintPierreEtMiquelonBBAN(iban)
	case "WF":
		return GetWallisAndFutunaIslandsBBAN(iban)
	case "GE":
		return GetGeorgiaBBAN(iban)
	case "DE":
		return GetGermanyBBAN(iban)
	case "GI":
		return GetGibraltarBBAN(iban)
	case "GR":
		return GetGreeceBBAN(iban)
	case "GT":
		return GetGuatemalaBBAN(iban)
	case "HU":
		return GetHungaryBBAN(iban)
	case "IS":
		return GetIcelandBBAN(iban)
	case "IE":
		return GetIrelandBBAN(iban)
	case "IL":
		return GetIsraelBBAN(iban)
	case "IT":
		return GetItalyBBAN(iban)
	case "JO":
		return GetJordanBBAN(iban)
	case "KZ":
		return GetKazakhstanBBAN(iban)
	case "XK":
		return GetRepublicOfKosovoBBAN(iban)
	case "KW":
		return GetKuwaitBBAN(iban)
	case "LV":
		return GetLatviaBBAN(iban)
	case "LB":
		return GetLebanonBBAN(iban)
	case "LI":
		return GetPrincipalityOfLiechtensteinBBAN(iban)
	case "LT":
		return GetLithuaniaBBAN(iban)
	case "LU":
		return GetLuxembourgBBAN(iban)
	case "MK":
		return GetMacedoniaBBAN(iban)
	case "MT":
		return GetMaltaBBAN(iban)
	case "MR":
		return GetMauritaniaBBAN(iban)
	case "MU":
		return GetMauritiusBBAN(iban)
	case "MD":
		return GetMoldovaBBAN(iban)
	case "MC":
		return GetMonacoBBAN(iban)
	case "ME":
		return GetMontenegroBBAN(iban)
	case "NL":
		return GetTheNetherlandsBBAN(iban)
	case "NO":
		return GetNorwayBBAN(iban)
	case "PK":
		return GetPakistanBBAN(iban)
	case "PS":
		return GetStateOfPalestineBBAN(iban)
	case "PL":
		return GetPolandBBAN(iban)
	case "PT":
		return GetPortugalBBAN(iban)
	case "QA":
		return GetQatarBBAN(iban)
	case "RO":
		return GetRomaniaBBAN(iban)
	case "LC":
		return GetSaintLuciaBBAN(iban)
	case "SM":
		return GetSanMarinoBBAN(iban)
	case "ST":
		return GetSaoTomeAndPrincipeBBAN(iban)
	case "SA":
		return GetSaudiArabiaBBAN(iban)
	case "RS":
		return GetSerbiaBBAN(iban)
	case "SK":
		return GetSlovakRepublicBBAN(iban)
	case "SI":
		return GetSloveniaBBAN(iban)
	case "ES":
		return GetSpainBBAN(iban)
	case "SE":
		return GetSwedenBBAN(iban)
	case "CH":
		return GetSwitzerlandBBAN(iban)
	case "TL":
		return GetTimorLesteBBAN(iban)
	case "TN":
		return GetTunisiaBBAN(iban)
	case "TR":
		return GetTurkeyBBAN(iban)
	case "AE":
		return GetUnitedArabEmiratesBBAN(iban)
	case "GB":
		return GetUnitedKingdomBBAN(iban)
	case "VG":
		return GetBritishVirginIslandsBBAN(iban)
	case "SC":
		return GetSeychellesBBAN(iban)
	case "UA":
		return GetUkraineBBAN(iban)

	default:
		return BBAN{}, fmt.Errorf("%s is not supported: %w", code, ErrValidation)
	}
}
