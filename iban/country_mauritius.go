// Code generated by banking/generator; DO NOT EDIT.

package iban

import (
	"fmt"

	"github.com/jacoelho/banking/ascii"
	"github.com/jacoelho/banking/pool"
)

// ValidateMauritiusIBAN validates Mauritius IBAN
func ValidateMauritiusIBAN(iban string) error {
	if len(iban) != 30 {
		return fmt.Errorf("unexpected length, want: 30: %w", ErrValidation)
	}

	if subject := iban[0:2]; subject != "MU" {
		return fmt.Errorf("static value rule, pos: 0, expected value: MU, found %s: %w", subject, ErrValidation)
	}

	if subject := iban[2:4]; !ascii.Every(subject, ascii.IsDigit) {
		return fmt.Errorf("range rule, start pos: 2, length: 2, expected type Digit, found %s: %w", subject, ErrValidation)
	}

	if subject := iban[4:8]; !ascii.Every(subject, ascii.IsUpperCaseLetter) {
		return fmt.Errorf("range rule, start pos: 4, length: 4, expected type UpperCaseLetters, found %s: %w", subject, ErrValidation)
	}

	if subject := iban[8:27]; !ascii.Every(subject, ascii.IsDigit) {
		return fmt.Errorf("range rule, start pos: 8, length: 19, expected type Digit, found %s: %w", subject, ErrValidation)
	}

	if subject := iban[27:30]; !ascii.Every(subject, ascii.IsUpperCaseLetter) {
		return fmt.Errorf("range rule, start pos: 27, length: 3, expected type UpperCaseLetters, found %s: %w", subject, ErrValidation)
	}

	if c := Checksum(iban); c != iban[2:4] {
		return fmt.Errorf("incorrect checksum: %w", ErrValidation)
	}

	return nil
}

// GenerateMauritiusIBAN generates Mauritius IBAN
func GenerateMauritiusIBAN() string {
	sb := pool.BytesPool.Get()
	defer sb.Free()

	sb.WriteString("MU")
	generator.Digits(sb, 2)
	generator.UpperCaseLetters(sb, 4)
	generator.Digits(sb, 19)
	generator.UpperCaseLetters(sb, 3)

	return ReplaceChecksum(sb.String())
}

// GetMauritiusBBAN retrieves BBAN structure from Mauritius IBAN
func GetMauritiusBBAN(iban string) (BBAN, error) {
	if len(iban) != 30 {
		return BBAN{}, fmt.Errorf("unexpected length, want: 30: %w", ErrValidation)
	}

	return BBAN{
		BBAN:             iban[4:],
		BankCode:         iban[4:10],
		BranchCode:       iban[10:12],
		NationalChecksum: "",
		AccountNumber:    iban[12:30],
	}, nil
}
