// Code generated by banking/generator; DO NOT EDIT.

package iban

import (
	"fmt"
	"strings"

	"github.com/jacoelho/banking/ascii"
)

// ValidatePolandIBAN validates Poland IBAN
func ValidatePolandIBAN(iban string) error {
	if len(iban) != 28 {
		return fmt.Errorf("unexpected length, want: 28: %w", ErrValidation)
	}

	if subject := iban[0:2]; subject != "PL" {
		return fmt.Errorf("static value rule, pos: 0, expected value: PL, found %s: %w", subject, ErrValidation)
	}

	if subject := iban[2:28]; !ascii.Every(subject, ascii.IsDigit) {
		return fmt.Errorf("range rule, start pos: 2, length: 26, expected type Digit, found %s: %w", subject, ErrValidation)
	}

	if c := Checksum(iban); c != iban[2:4] {
		return fmt.Errorf("incorrect checksum: %w", ErrValidation)
	}

	return nil
}

// GeneratePolandIBAN generates Poland IBAN
func GeneratePolandIBAN() string {
	var sb = new(strings.Builder)

	sb.WriteString("PL")
	generator.Digits(sb, 26)

	return ReplaceChecksum(sb.String())
}
